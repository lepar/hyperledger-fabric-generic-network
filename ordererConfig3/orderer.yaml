# SPDX-License-Identifier: Apache-2.0

General:
  ListenAddress: 127.0.0.1
  ListenPort: 9050

  # TLS: TLS settings for the GRPC server.
  TLS:
    Enabled: false
    # PrivateKey governs the file location of the private key of the TLS certificate.
    PrivateKey: tls/server.key
    # Certificate governs the file location of the server TLS certificate.
    Certificate: tls/server.crt
    RootCAs:
      - tls/ca.crt
    ClientAuthRequired: false
    ClientRootCAs:
  # Keepalive settings for the GRPC server.
  Keepalive:
    ServerMinInterval: 60s
    ServerInterval: 7200s
    ServerTimeout: 20s
  # Cluster settings for ordering service nodes that communicate with other ordering service nodes
  # such as Raft based ordering service.
  Cluster:
    SendBufferSize: 10
    # ClientCertificate governs the file location of the client TLS certificate
    # used to establish mutual TLS connections with other ordering service nodes.
    ClientCertificate:
    # ClientPrivateKey governs the file location of the private key of the client TLS certificate.
    ClientPrivateKey:

    ListenPort:
    ListenAddress:
    ServerCertificate:
    ServerPrivateKey:
  # Genesis method: The method by which the genesis block for the orderer
  # system channel is specified. Available options are "provisional", "file":
  #  - provisional: Utilizes a genesis profile, specified by GenesisProfile,
  #                 to dynamically generate a new genesis block.
  #  - file: Uses the file provided by GenesisFile as the genesis block.
  GenesisMethod: provisional
  GenesisFile: genesisblock

  # LocalMSPDir is where to find the private crypto material needed by the
  # orderer. It is set relative here as a default for dev environments but
  # should be changed to the real location in production.
  LocalMSPDir: msp
  LocalMSPID: OrdererMSP

  # Enable an HTTP service for Go "pprof" profiling as documented at:
  # https://golang.org/pkg/net/http/pprof
  Profile:
    Enabled: false
    Address: 0.0.0.0:6060

  # BCCSP configures the blockchain crypto service providers.
  BCCSP:
    Default: SW
    SW:
      Hash: SHA2
      Security: 256
      # Location of key store. If this is unset, a location will be
      # chosen using: 'LocalMSPDir'/keystore
      FileKeyStore:
        KeyStore:

  # Authentication contains configuration parameters related to authenticating
  # client messages
  Authentication:
    # the acceptable difference between the current server time and the
    # client's time as specified in a client request message
    TimeWindow: 15m

FileLedger:
  Location: /etc/hyperledger/production/orderer
  Prefix: hyperledger-fabric-ordererledger

Debug:
  # BroadcastTraceDir when set will cause each request to the Broadcast service for this orderer to be written to a file in this directory
  BroadcastTraceDir:
  # DeliverTraceDir when set will cause each request to the Deliver service for this orderer to be written to a file in this directory
  DeliverTraceDir:

Operations:
  # host and port for the operations server
  ListenAddress: 127.0.0.1:8443

  # TLS configuration for the operations endpoint
  TLS:
    # TLS enabled
    Enabled: false
    # Certificate is the location of the PEM encoded TLS certificate
    Certificate:
    # PrivateKey points to the location of the PEM-encoded key
    PrivateKey:
    # Most operations service endpoints require client authentication when TLS is enabled ClientAuthRequired requires client certificate authentication at the TLS layer to access all resources.
    ClientAuthRequired: false

    # Paths to PEM encoded ca certificates to trust for client authentication
    ClientRootCAs: []

Metrics:
  # The metrics provider is one of statsd, prometheus, or disabled
  Provider: disabled
  # The statsd configuration
  Statsd:
    # network type: tcp or udp
    Network: udp
    Address: 127.0.0.1:8125
    WriteInterval: 30s
    Prefix:

Consensus:
  # The allowed key-value pairs here depend on consensus plugin. For etcd/raft,
  # we use following options:

  # WALDir specifies the location at which Write Ahead Logs for etcd/raft are
  # stored. Each channel will have its own subdir named after channel ID.
  WALDir: /var/hyperledger/production/orderer/etcdraft/wal

  # SnapDir specifies the location at which snapshots for etcd/raft are
  # stored. Each channel will have its own subdir named after channel ID.
  SnapDir: /var/hyperledger/production/orderer/etcdraft/snapshot
